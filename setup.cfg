[metadata]
name = monai-deploy-app-sdk
author = MONAI Consortium
author_email = monai.contact@gmail.com
url = https://monai.io/
description = A framework and associated tools to design, verify and analyze performance of MONAI apps
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
platforms = OS Independent
license = Apache License 2.0
license_files =
    LICENSE
project_urls =
    Documentation=https://docs.monai.io/projects/monai-deploy-app-sdk/en/stable/
    Bug Tracker=https://github.com/Project-MONAI/monai-deploy-app-sdk/issues
    Source Code=https://github.com/Project-MONAI/monai-deploy-app-sdk

[options]
python_requires = >= 3.8
# for compiling and develop setup only
# no need to specify the versions so that we could
# compile for multiple targeted versions.
# setup_requires =
#     cucim
install_requires =
    numpy>=1.21.6
    holoscan~=2.0
    colorama>=0.4.1
    typeguard>=3.0.0

[options.extras_require]
all =
    cucim~=21.06
cucim =
    cucim~=21.06

[flake8]
select = B,C,E,F,N,P,T4,W,B9
max_line_length = 120
# C408 ignored because we like the dict keyword argument syntax
# E501 is not flexible enough, we're using B950 instead
ignore =
    E203,E305,E402,E501,E721,E741,F821,F841,F999,W503,W504,C408,E302,W291,E303,
    # N812 lowercase 'torch.nn.functional' imported as non lowercase 'F'
    N812,
    #B024, abstract base class, but it has no abstract methods
    B024,
    # B027, #method in base class with no implementation
    B027,
    # B905 `zip()` without an explicit `strict=` parameter, but conflicting with pytype
    B905,
    # B026 Star-arg unpacking after a keyword argument is strongly discouraged
    B026
    #  B909 editing a loop's mutable iterable often leads to unexpected results/bugs
    B909

per_file_ignores =
    # e.g. F403 'from holoscan.conditions import *' used; unable to detect undefined names
    # Due to the need to exposing all holoscan submodules, 'import *' is needed.
    __init__.py: F401, F403
    # Allow using camel case for variable/argument names for the sake of readability.
    # 43 warnings with N803(2) N806(41) in dicom_seg_writer_operator.py
    dicom_seg_writer_operator.py: N803, N806
    #Allow function names (@property) who are not lowercase for standards compliance and readability.
    # 30 warnings with N802 in dicom_study.py
    dicom_study.py: N802
    dicom_series.py:N802
exclude = *.pyi,.git,.eggs,monai/deploy/_version.py,dist,versioneer.py,venv,.venv,_version.py

[isort]
known_first_party = monai
profile = black
line_length = 120
skip = .git, .eggs, venv, .venv, versioneer.py, _version.py, conf.py, dist
skip_glob = *.pyi

[versioneer]
VCS = git
style = pep440
versionfile_source = monai/deploy/_version.py
versionfile_build = monai/deploy/_version.py
tag_prefix =
parentdir_prefix =

[mypy]
# Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = True
# Changes the treatment of arguments with a default value of None by not implicitly making their type Optional.
no_implicit_optional = True
# Warns about casting an expression to its inferred type.
warn_redundant_casts = True
# No error on unneeded # type: ignore comments.
warn_unused_ignores = False
# Shows a warning when returning a value with type Any from a function declared with a non-Any return type.
warn_return_any = True
# Prohibit equality checks, identity checks, and container checks between non-overlapping types.
strict_equality = True
# Shows column numbers in error messages.
show_column_numbers = True
# Shows error codes in error messages.
show_error_codes = True
# Use visually nicer output in error messages: use soft word wrap, show source code snippets, and show error location markers.
pretty = False
# Exclude certain files/folders
exclude = (dist|notebooks|platforms)/$

[mypy-versioneer]
# Ignores all non-fatal errors.
ignore_errors = True

[mypy-*._version]
# Ignores all non-fatal errors.
ignore_errors = True

[mypy-monai.eggs]
# Ignores all non-fatal errors.
ignore_errors = True

[tool:pytest]
# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
norecursedirs =
    migrations
python_files =
    test_*.py
    *_test.py
    tests.py
# PytestDeprecationWarning: The --strict option is deprecated, use --strict-markers instead.
addopts =
    -ra
    --strict-markers
    # --doctest-modules
    # --doctest-glob=\*.rst
    --tb=short
    --ignore-glob build
testpaths =
    tests

[coverage:run]
concurrency = multiprocessing
source = .
data_file = .coverage/.coverage
omit = setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    # Don't complain if tests don't hit code:
    raise NotImplementedError
    if __name__ == .__main__.:
show_missing = True
skip_covered = True

[coverage:xml]
output = coverage.xml
