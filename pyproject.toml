[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "versioneer-518"
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
(
  /(
    # exclude a few common directories in the root of the project
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.pytype
    | _build
    | buck-out
    | build
    | dist
    | docs/source/notebooks
    | notebooks
  )/
  # also separately exclude a file named versioneer.py and _version.py
  | versioneer.py
  | .+/versioneer.py
  | .+/_version.py
)
'''

# https://github.com/microsoft/pyright/blob/main/docs/configuration.md
# NOTE: All relative paths are relative to the location of this file.
[tool.pyright]
ignore = ["versioneer.py", "_version.py"]

# https://google.github.io/pytype/
[tool.pytype]
# Space-separated list of files or directories to exclude.
exclude = [
    'versioneer.py',
    '_version.py',
    '**/_version.py',
]
# Space-separated list of files or directories to process.
inputs = [
    'monai',
]
# Keep going past errors to analyze as many files as possible.
keep_going = true
# Run N jobs in parallel. When 'auto' is used, this will be equivalent to the
# number of CPUs on the host system.
jobs = 8
# All pytype output goes here.
output = '.pytype'
# Platform (e.g., "linux", "win32") that the target code runs on.
platform = 'linux'
# Paths to source code directories, separated by ':'.
pythonpath = '.'

# Always use function return type annotations. This flag is temporary and will
# be removed once this behavior is enabled by default.
always_use_return_annotations = false

# Enable parameter count checks for overriding methods. This flag is temporary
# and will be removed once this behavior is enabled by default.
overriding_parameter_count_checks = false

# Enable return type checks for overriding methods. This flag is temporary and
# will be removed once this behavior is enabled by default.
overriding_return_type_checks = true

# Use the enum overlay for more precise enum checking. This flag is temporary
# and will be removed once this behavior is enabled by default.
use_enum_overlay = false

# Opt-in: Do not allow Any as a return type.
no_return_any = false

# Experimental: Support pyglib's @cached.property.
enable_cached_property = false

# Experimental: Infer precise return types even for invalid function calls.
precise_return = false

# Experimental: Solve unknown types to label with structural types.
protocols = false

# Experimental: Only load submodules that are explicitly imported.
strict_import = false

# Experimental: Enable exhaustive checking of function parameter types.
strict_parameter_checks = false

# Experimental: Emit errors for comparisons between incompatible primitive
# types.
strict_primitive_comparisons = false

# Space-separated list of error names to ignore.
disable = [
    'pyi-error',
    'container-type-mismatch',
    'attribute-error',
]

# Don't report errors.
report_errors = true
